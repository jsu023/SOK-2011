install.packages('gapminder')
library(WDI)
library(dplyr)
library(plyr)
library(tidyverse)
library(countrycode)
install.packages("WDI")
library(WDI)
install.packages('gapminder')
library(gapminder)
install.packages('gapminder')
library(gapminder)
library(WDI)
library(dplyr)
library(plyr)
library(tidyverse)
library(countrycode)
df_gdp0<-WDI(
country = "all",
indicator = c('gdppc'="NY.GDP.PCAP.PP.KD"),
start = 2000,
end = 2019,
extra = TRUE, # det å sette "extra = TRUE" fører til at vi laster inn ekstra informasjon som vi kan benytte seinere (f.eks. variabelen "region")
cache = NULL,
latest = NULL,
language = "en"
)
df_gdp1 <- subset(df_gdp0, select = c(country, region, income, iso2c, iso3c, year, gdppc) ) %>%  arrange(iso3c, year) # velg ut relevante variabler
df_gdp2 <-  df_gdp1 %>% mutate_all(na_if,"") # Vi ønsker å ta vekk land som ikke har en iso3c kode. Dessverre er manglende observasjoner for "iso3c" (landkode) kodet som "blanks" isteden for "missing". Denne koden korrigerer dette.
df_gdp3 <- df_gdp2[complete.cases( df_gdp1$gdppc, df_gdp1$iso3c),] # Ta vekk observasjoner som mangler data på gdppc og iso3c.
df_gdp3 = df_gdp3  %>%
mutate(year = as.numeric(year)) # Se til at year er en numerisk variabel.
# Noen land har flere observasjoner for samme år (f.eks afghanistan år 2010). Vi ønsker å ha én observasjon per land og år.
df_gdp4 <- df_gdp3[!duplicated(df_gdp2[c("iso3c", "year", max("gdppc"))]), ]  %>%  arrange(iso3c, year) # Ta vekk duplikater for land og år, behold observasjonen med størst gdppc (denne regelen kan diskuteres)
# Lag et datasett med Y0 (nivå på BNP per innbyggere i år 2000)
df_gdp5  <- df_gdp4 %>%  arrange(iso3c, year) %>% group_by(iso3c) %>% #Behold den første observasjonen for BNP per innbyggere (Y0)
slice(1) %>%
ungroup()
df_gdp2000 = subset(df_gdp5, select = -c(year) ) # Slett unødvendige variabler
df_gdp2000 <-   plyr:: rename(df_gdp2000,c("gdppc" = "gdppc0")) # Gi variabeln et nytt navn slik at vi kan identifisere den i datasetet.
df_gdp <- left_join(df_gdp4,df_gdp2000, by=c("country", "iso2c", "iso3c", "region", "income")) # Sett sammen data for BNP per innbygger alle år, med BNP per innbygger år 2000.
df_educ0<-WDI(
country = "all",
indicator = c('educ'="BAR.SCHL.15UP"),
start = 2000,
end = 2019,
extra = TRUE,
cache = NULL,
latest = NULL,
language = "en"
)
df_educ1 <- subset(df_educ0, select = c(country, region, income, iso2c, iso3c, year, educ) ) %>%  arrange(iso3c, year) #Behold nødvendige variabler
df_educ2 <- df_educ1[complete.cases(df_educ1$educ),] %>%  arrange(iso3c, year) # Slett observasjoner med manglende data
df_educ3 = df_educ2 %>%
arrange(iso3c, year) %>%  # Sorter etter Iso-kode og år.
mutate(educ = as.numeric(educ, na.rm = TRUE)) %>% # Se til at variabelen er numerisk
ddply("iso3c",transform,
avg_educ=mean(educ, na.rm = TRUE))  # Beregne gjennomsnittlig år i skole for tidsperioden 2000 - 2019 for hvert land, basert på tilgjenglig data
df_educ4 <- subset(df_educ3, select = c(country, region, income, iso2c, iso3c, avg_educ)) # Her tar jeg vekk variabelen "year". Jeg gjør dette fordi vi bare har en observasjon på utdanning per land. Vi ønsker å bruke denne verdi for alle år.
df_educ <- df_educ4[!duplicated(df_educ4[c("iso3c")]), ]  %>%  arrange(iso3c) # Ta vekk duplikater for hvert land.
df_gdp_educ0 <- left_join(df_gdp, df_educ, by=c("country", "iso2c", "iso3c", "region", "income"))
df_gdp_educ1 <- subset(df_gdp_educ0, select = c(country, region, income, iso2c, iso3c, year, gdppc, gdppc0, avg_educ)) # Behold nødvendige variabler
# Mange observasjoner representerer aggregerte regioner. Vi ønsker å ta vekk disse. Det finnes helt sikkert en bedre måte å gjøre dette på. Dette er den måten jeg kom på.
df_gdp_educ <- df_gdp_educ1  %>%  filter(iso2c!='1A' & iso2c !='1W' & iso2c != '4E' & iso2c != '7E' & iso2c !='8S'
& iso2c !='B8' & iso2c !='EU' & iso2c !='F1' & iso2c !='OE' & iso2c !='S1' & iso2c !='S2' & iso2c !="S3"
& iso2c !='S4' & iso2c !='T2' & iso2c !='T3' & iso2c !='T4' & iso2c !='T5' & iso2c !='T6' & iso2c !='T7'
& iso2c !='V1' & iso2c !='V2' & iso2c !='V3' & iso2c !='V4' & iso2c !='XC' & iso2c !='XD' & iso2c !='XE'
& iso2c !='XF' & iso2c !='XG' & iso2c !='XH' & iso2c !='XI' & iso2c !='XJ' & iso2c !='XL' & iso2c !='XM'
& iso2c !='XN' & iso2c !='XO' & iso2c !='XP' & iso2c !='XQ' & iso2c !='XT' & iso2c !='XU' & iso2c !='Z4'
& iso2c !='Z7' & iso2c !='ZF'& iso2c !='ZG'  & iso2c !='ZH' & iso2c !='ZI'  & iso2c !='ZJ'  & iso2c !='ZQ'
& iso2c !='ZT'  & iso2c !='Z7')  %>% arrange(iso3c, year)
df_rest0<-WDI(
country = "all",
indicator = c('gsy'="NY.ADJ.ICTR.GN.ZS", 'nsy'="NY.ADJ.NNAT.GN.ZS", 'poptot'="SP.POP.TOTL", 'lfp'="SP.POP.DPND",'gi'="NE.GDI.FTOT.KD.ZG", 'gx'="NE.EXP.GNFS.KD.ZG", 'nry'="NY.ADJ.DRES.GN.ZS", 'n'="SP.POP.GROW" ),
start = 2000,
end = 2019,
extra = TRUE,
cache = NULL,
latest = NULL,
language = "en"
)
df_rest0<-df_rest0 %>% mutate_all(na_if,"")
df_rest1 <- df_rest0[complete.cases( df_rest0$iso3c, df_rest0$nsy),]  %>%  arrange(iso2c)
# Ta vekk observasjoner som ikke representerer land.
df_rest2 <- df_rest1  %>%  filter(iso2c!='1A' & iso2c !='1W' & iso2c != '4E' & iso2c != '7E' & iso2c !='8S'
& iso2c !='B8' & iso2c !='EU' & iso2c !='F1' & iso2c !='OE' & iso2c !='S1' & iso2c !='S2' & iso2c !="S3"
& iso2c !='S4' & iso2c !='T2' & iso2c !='T3' & iso2c !='T4' & iso2c !='T5' & iso2c !='T6' & iso2c !='T7'
& iso2c !='V1' & iso2c !='V2' & iso2c !='V3' & iso2c !='V4' & iso2c !='XC' & iso2c !='XD' & iso2c !='XE'
& iso2c !='XF' & iso2c !='XG' & iso2c !='XH' & iso2c !='XI' & iso2c !='XJ' & iso2c !='XL' & iso2c !='XM'
& iso2c !='XN' & iso2c !='XO' & iso2c !='XP' & iso2c !='XQ' & iso2c !='XT' & iso2c !='XU' & iso2c !='Z4'
& iso2c !='Z7' & iso2c !='ZF'& iso2c !='ZG'  & iso2c !='ZH' & iso2c !='ZI'  & iso2c !='ZJ'  & iso2c !='ZQ'
& iso2c !='ZT'  & iso2c !='Z7')  %>% arrange(iso3c, year)
df_rest3 <- subset(df_rest2, select = c("country", "region", "income", "iso3c", "iso2c", "year", "poptot", "n","lfp", "nsy", "gsy", "nry", "gi", "gx"))
df_all0 <- left_join(df_gdp_educ, df_rest3, by=c("country", "region", "income", "iso2c", "iso3c", "year"))
# Lage en rekkefølge til variablene slik at det er enklere å få en oversikt over datamaterialet.
col_order <- c("country",  "region", "income", "iso3c", "iso2c", "year", "gdppc", "gdppc0", "poptot", "n","lfp", "nsy", "gsy", "nry", "gi", "gx", "avg_educ")
df_all0 <- df_all0[, col_order]
# Beregning av gjennomsnittlig årlig vekstrate i BNP per innbygger, investeringer og naturressurser.
df_growth0 = df_all0 %>%
arrange(iso3c, year) %>%  # Sorter på år og land
ddply("iso3c",transform,
gdpgrowth=c(NA,diff(log(gdppc))-1)*100) %>%  # Årlig vekstrate i gdppc for hvert land
mutate(gdpgrowth = as.numeric(gdpgrowth, na.rm = TRUE)) %>% #
ddply("iso3c",transform,
avg_gdpgrowth=mean(gdpgrowth, na.rm = TRUE), #Gjennomsnittlig årlig vekstrate for hvert land i perioden
avg_gi=mean(gi, na.rm = TRUE), # Gjennomsnittlig årlig vekstrate i investeringer for hvert land  i perioden
avg_nry=mean(nry, na.rm = TRUE),  # Gjennomsnittlig årlig vekstrate (negativ) i naturressurser for hvert land  i perioden
avg_gx=mean(gx, na.rm = TRUE),  # Gjennomsnittlig årlig vekstrate i eksport for hvert land  i perioden
avg_nsy=mean(nsy, na.rm = TRUE),  # Gjennomsnittlig årlig nettosparing for hvert land  i perioden
avg_n=mean(n, na.rm = TRUE),  # Gjennomsnittlig årlig vekstrate i befolkningen for hvert land  i perioden
avg_lfp=mean(lfp, na.rm = TRUE)) # Gjennomsnittlig forsørgelsesbyrde (dependency ratio) for hvert land i perioden.
df_growth1 <- df_growth0[complete.cases( df_growth0$country, df_growth0$income, df_growth0$iso3c, df_growth0$avg_gdpgrowth),] # Ta vekk land som mangler data på gdppc
df_growth <- subset(df_growth1, select = c("country",  "region", "income", "iso3c", "iso2c","year", "poptot", "gdppc", "gdppc0", "avg_gdpgrowth", "avg_n", "avg_lfp", "avg_nsy", "avg_nry", "avg_gi", "avg_gx", "avg_educ"))
# Lage datasettet du vil bruke til analysen din
df_growth2019  <- df_growth %>%  arrange(iso3c, year) %>% group_by(iso3c) %>%
slice(n()) %>% # Behold den SISTE observasjonen for hvert land
ungroup()
head(df_growth2019)
View(df_gdp0)
View(df_educ0)
View(df_rest0)
install.packages('gapminder')
library(gapminder)
library(WDI)
library(dplyr)
library(plyr)
library(tidyverse)
library(countrycode)
df_gdp0<-WDI(
country = "all",
indicator = c('gdppc'="NY.GDP.PCAP.PP.KD"),
start = 2000,
end = 2019,
extra = TRUE, # det å sette "extra = TRUE" fører til at vi laster inn ekstra informasjon som vi kan benytte seinere (f.eks. variabelen "region")
cache = NULL,
latest = NULL,
language = "en"
)
df_gdp1 <- subset(df_gdp0, select = c(country, region, income, iso2c, iso3c, year, gdppc) ) %>%  arrange(iso3c, year) # velg ut relevante variabler
df_gdp2 <-  df_gdp1 %>% mutate_all(na_if,"") # Vi ønsker å ta vekk land som ikke har en iso3c kode. Dessverre er manglende observasjoner for "iso3c" (landkode) kodet som "blanks" isteden for "missing". Denne koden korrigerer dette.
df_gdp3 <- df_gdp2[complete.cases( df_gdp1$gdppc, df_gdp1$iso3c),] # Ta vekk observasjoner som mangler data på gdppc og iso3c.
df_gdp3 = df_gdp3  %>%
mutate(year = as.numeric(year)) # Se til at year er en numerisk variabel.
# Noen land har flere observasjoner for samme år (f.eks afghanistan år 2010). Vi ønsker å ha én observasjon per land og år.
df_gdp4 <- df_gdp3[!duplicated(df_gdp2[c("iso3c", "year", max("gdppc"))]), ]  %>%  arrange(iso3c, year) # Ta vekk duplikater for land og år, behold observasjonen med størst gdppc (denne regelen kan diskuteres)
# Lag et datasett med Y0 (nivå på BNP per innbyggere i år 2000)
df_gdp5  <- df_gdp4 %>%  arrange(iso3c, year) %>% group_by(iso3c) %>% #Behold den første observasjonen for BNP per innbyggere (Y0)
slice(1) %>%
ungroup()
df_gdp2000 = subset(df_gdp5, select = -c(year) ) # Slett unødvendige variabler
df_gdp2000 <-   plyr:: rename(df_gdp2000,c("gdppc" = "gdppc0")) # Gi variabeln et nytt navn slik at vi kan identifisere den i datasetet.
df_gdp <- left_join(df_gdp4,df_gdp2000, by=c("country", "iso2c", "iso3c", "region", "income")) # Sett sammen data for BNP per innbygger alle år, med BNP per innbygger år 2000.
df_educ0<-WDI(
country = "all",
indicator = c('educ'="BAR.SCHL.15UP"),
start = 2000,
end = 2019,
extra = TRUE,
cache = NULL,
latest = NULL,
language = "en"
)
df_educ1 <- subset(df_educ0, select = c(country, region, income, iso2c, iso3c, year, educ) ) %>%  arrange(iso3c, year) #Behold nødvendige variabler
df_educ2 <- df_educ1[complete.cases(df_educ1$educ),] %>%  arrange(iso3c, year) # Slett observasjoner med manglende data
df_educ3 = df_educ2 %>%
arrange(iso3c, year) %>%  # Sorter etter Iso-kode og år.
mutate(educ = as.numeric(educ, na.rm = TRUE)) %>% # Se til at variabelen er numerisk
ddply("iso3c",transform,
avg_educ=mean(educ, na.rm = TRUE))  # Beregne gjennomsnittlig år i skole for tidsperioden 2000 - 2019 for hvert land, basert på tilgjenglig data
df_educ4 <- subset(df_educ3, select = c(country, region, income, iso2c, iso3c, avg_educ)) # Her tar jeg vekk variabelen "year". Jeg gjør dette fordi vi bare har en observasjon på utdanning per land. Vi ønsker å bruke denne verdi for alle år.
df_educ <- df_educ4[!duplicated(df_educ4[c("iso3c")]), ]  %>%  arrange(iso3c) # Ta vekk duplikater for hvert land.
df_gdp_educ0 <- left_join(df_gdp, df_educ, by=c("country", "iso2c", "iso3c", "region", "income"))
df_gdp_educ1 <- subset(df_gdp_educ0, select = c(country, region, income, iso2c, iso3c, year, gdppc, gdppc0, avg_educ)) # Behold nødvendige variabler
# Mange observasjoner representerer aggregerte regioner. Vi ønsker å ta vekk disse. Det finnes helt sikkert en bedre måte å gjøre dette på. Dette er den måten jeg kom på.
df_gdp_educ <- df_gdp_educ1  %>%  filter(iso2c!='1A' & iso2c !='1W' & iso2c != '4E' & iso2c != '7E' & iso2c !='8S'
& iso2c !='B8' & iso2c !='EU' & iso2c !='F1' & iso2c !='OE' & iso2c !='S1' & iso2c !='S2' & iso2c !="S3"
& iso2c !='S4' & iso2c !='T2' & iso2c !='T3' & iso2c !='T4' & iso2c !='T5' & iso2c !='T6' & iso2c !='T7'
& iso2c !='V1' & iso2c !='V2' & iso2c !='V3' & iso2c !='V4' & iso2c !='XC' & iso2c !='XD' & iso2c !='XE'
& iso2c !='XF' & iso2c !='XG' & iso2c !='XH' & iso2c !='XI' & iso2c !='XJ' & iso2c !='XL' & iso2c !='XM'
& iso2c !='XN' & iso2c !='XO' & iso2c !='XP' & iso2c !='XQ' & iso2c !='XT' & iso2c !='XU' & iso2c !='Z4'
& iso2c !='Z7' & iso2c !='ZF'& iso2c !='ZG'  & iso2c !='ZH' & iso2c !='ZI'  & iso2c !='ZJ'  & iso2c !='ZQ'
& iso2c !='ZT'  & iso2c !='Z7')  %>% arrange(iso3c, year)
df_rest0<-WDI(
country = "all",
indicator = c('gsy'="NY.ADJ.ICTR.GN.ZS", 'nsy'="NY.ADJ.NNAT.GN.ZS", 'poptot'="SP.POP.TOTL", 'lfp'="SP.POP.DPND",'gi'="NE.GDI.FTOT.KD.ZG", 'gx'="NE.EXP.GNFS.KD.ZG", 'nry'="NY.ADJ.DRES.GN.ZS", 'n'="SP.POP.GROW" ),
start = 2000,
end = 2019,
extra = TRUE,
cache = NULL,
latest = NULL,
language = "en"
)
df_rest0<-df_rest0 %>% mutate_all(na_if,"")
df_rest1 <- df_rest0[complete.cases( df_rest0$iso3c, df_rest0$nsy),]  %>%  arrange(iso2c)
# Ta vekk observasjoner som ikke representerer land.
df_rest2 <- df_rest1  %>%  filter(iso2c!='1A' & iso2c !='1W' & iso2c != '4E' & iso2c != '7E' & iso2c !='8S'
& iso2c !='B8' & iso2c !='EU' & iso2c !='F1' & iso2c !='OE' & iso2c !='S1' & iso2c !='S2' & iso2c !="S3"
& iso2c !='S4' & iso2c !='T2' & iso2c !='T3' & iso2c !='T4' & iso2c !='T5' & iso2c !='T6' & iso2c !='T7'
& iso2c !='V1' & iso2c !='V2' & iso2c !='V3' & iso2c !='V4' & iso2c !='XC' & iso2c !='XD' & iso2c !='XE'
& iso2c !='XF' & iso2c !='XG' & iso2c !='XH' & iso2c !='XI' & iso2c !='XJ' & iso2c !='XL' & iso2c !='XM'
& iso2c !='XN' & iso2c !='XO' & iso2c !='XP' & iso2c !='XQ' & iso2c !='XT' & iso2c !='XU' & iso2c !='Z4'
& iso2c !='Z7' & iso2c !='ZF'& iso2c !='ZG'  & iso2c !='ZH' & iso2c !='ZI'  & iso2c !='ZJ'  & iso2c !='ZQ'
& iso2c !='ZT'  & iso2c !='Z7')  %>% arrange(iso3c, year)
df_rest3 <- subset(df_rest2, select = c("country", "region", "income", "iso3c", "iso2c", "year", "poptot", "n","lfp", "nsy", "gsy", "nry", "gi", "gx"))
df_all0 <- left_join(df_gdp_educ, df_rest3, by=c("country", "region", "income", "iso2c", "iso3c", "year"))
# Lage en rekkefølge til variablene slik at det er enklere å få en oversikt over datamaterialet.
col_order <- c("country",  "region", "income", "iso3c", "iso2c", "year", "gdppc", "gdppc0", "poptot", "n","lfp", "nsy", "gsy", "nry", "gi", "gx", "avg_educ")
df_all0 <- df_all0[, col_order]
# Beregning av gjennomsnittlig årlig vekstrate i BNP per innbygger, investeringer og naturressurser.
df_growth0 = df_all0 %>%
arrange(iso3c, year) %>%  # Sorter på år og land
ddply("iso3c",transform,
gdpgrowth=c(NA,diff(log(gdppc))-1)*100) %>%  # Årlig vekstrate i gdppc for hvert land
mutate(gdpgrowth = as.numeric(gdpgrowth, na.rm = TRUE)) %>% #
ddply("iso3c",transform,
avg_gdpgrowth=mean(gdpgrowth, na.rm = TRUE), #Gjennomsnittlig årlig vekstrate for hvert land i perioden
avg_gi=mean(gi, na.rm = TRUE), # Gjennomsnittlig årlig vekstrate i investeringer for hvert land  i perioden
avg_nry=mean(nry, na.rm = TRUE),  # Gjennomsnittlig årlig vekstrate (negativ) i naturressurser for hvert land  i perioden
avg_gx=mean(gx, na.rm = TRUE),  # Gjennomsnittlig årlig vekstrate i eksport for hvert land  i perioden
avg_nsy=mean(nsy, na.rm = TRUE),  # Gjennomsnittlig årlig nettosparing for hvert land  i perioden
avg_n=mean(n, na.rm = TRUE),  # Gjennomsnittlig årlig vekstrate i befolkningen for hvert land  i perioden
avg_lfp=mean(lfp, na.rm = TRUE)) # Gjennomsnittlig forsørgelsesbyrde (dependency ratio) for hvert land i perioden.
df_growth1 <- df_growth0[complete.cases( df_growth0$country, df_growth0$income, df_growth0$iso3c, df_growth0$avg_gdpgrowth),] # Ta vekk land som mangler data på gdppc
df_growth <- subset(df_growth1, select = c("country",  "region", "income", "iso3c", "iso2c","year", "poptot", "gdppc", "gdppc0", "avg_gdpgrowth", "avg_n", "avg_lfp", "avg_nsy", "avg_nry", "avg_gi", "avg_gx", "avg_educ"))
# Lage datasettet du vil bruke til analysen din
df_growth2019  <- df_growth %>%  arrange(iso3c, year) %>% group_by(iso3c) %>%
slice(n()) %>% # Behold den SISTE observasjonen for hvert land
ungroup()
head(df_growth2019)
WDIsearch(string = "search item", field = "name", short = TRUE, cache = NULL)
WDIsearch(string = "search item", field = "name", short = TRUE, cache = NULL)
WDIsearch(string = "search item", field = "name", short = TRUE, cache = NULL)
library(WDI)
library(dplyr)
library(plyr)
library(tidyverse)
library(countrycode)
WDIsearch(string = "search item", field = "name", short = TRUE, cache = NULL)
install.packages('gapminder')
library(gapminder)
library(WDI)
library(dplyr)
library(plyr)
library(tidyverse)
library(countrycode)
WDIsearch(string = "search item", field = "name", short = TRUE, cache = NULL)
install.packages('gapminder')
library(gapminder)
library(WDI)
library(dplyr)
library(plyr)
library(tidyverse)
library(countrycode)
WDIsearch(string = "search item", field = "name", short = TRUE, cache = NULL)
df_gdp0<-WDI(
country = "all",
indicator = c('gdppc'="NY.GDP.PCAP.PP.KD"),
start = 2000,
end = 2019,
extra = TRUE, # det å sette "extra = TRUE" fører til at vi laster inn ekstra informasjon som vi kan benytte seinere (f.eks. variabelen "region")
cache = NULL,
latest = NULL,
language = "en"
)
View(df_gdp0)
df_gdp1 <- subset(df_gdp0, select = c(country, region, income, iso2c, iso3c, year, gdppc) ) %>%
arrange(iso3c, year) # velg ut relevante variabler
df_gdp2 <-  df_gdp1 %>%
mutate_all(na_if,"") # Vi ønsker å ta vekk land som ikke har en iso3c kode. Dessverre er manglende observasjoner for "iso3c" (landkode) kodet som "blanks" isteden for "missing". Denne koden korrigerer dette.
df_gdp3 <- df_gdp2[complete.cases( df_gdp1$gdppc, df_gdp1$iso3c),] # Ta vekk observasjoner som mangler data på gdppc og iso3c.
df_gdp3 = df_gdp3  %>%
mutate(year = as.numeric(year)) # Se til at year er en numerisk variabel.
# Noen land har flere observasjoner for samme år (f.eks afghanistan år 2010). Vi ønsker å ha én observasjon per land og år.
df_gdp4 <- df_gdp3[!duplicated(df_gdp2[c("iso3c", "year", max("gdppc"))]), ]  %>%
arrange(iso3c, year) # Ta vekk duplikater for land og år, behold observasjonen med størst gdppc (denne regelen kan diskuteres)
View(df_gdp4)
# Lag et datasett med Y0 (nivå på BNP per innbyggere i år 2000)
df_gdp5  <- df_gdp4 %>%
arrange(iso3c, year) %>%
group_by(iso3c) %>% #Behold den første observasjonen for BNP per innbyggere (Y0)
slice(1) %>%
ungroup()
View(df_gdp5)
df_gdp2000 = subset(df_gdp5, select = -c(year) ) # Slett unødvendige variabler
df_gdp2000 <-   plyr:: rename(df_gdp2000,c("gdppc" = "gdppcy0")) # Gi variabeln et nytt navn slik at vi kan identifisere den i datasetet.
df_gdp <- left_join(df_gdp4,df_gdp2000, by=c("country", "iso2c", "iso3c", "region", "income")) # Sett sammen data for BNP per innbygger alle år, med BNP per innbygger år 2000.
View(df_gdp)
df_educ0<-WDI(
country = "all",
indicator = c('educ'="BAR.SCHL.15UP"),
start = 2000,
end = 2019,
extra = TRUE,
cache = NULL,
latest = NULL,
language = "en"
)
df_educ1 <- subset(df_educ0, select = c(country, region, income, iso2c, iso3c, year, educ) )
df_educ2 <- df_educ1[complete.cases(df_educ1$educ),] %>%
arrange(iso3c, year) # Slett observasjoner med manglende data
df_educ3 = df_educ2 %>%
arrange(iso3c, year) %>%  # Sorter etter Iso-kode og år.
mutate(educ = as.numeric(educ, na.rm = TRUE)) %>% # Se til at variabelen er numerisk
ddply("iso3c",transform,
avg_educ=mean(educ, na.rm = TRUE))  # Beregne gjennomsnittlig år i skole for tidsperioden 2000 - 2019 for hvert land, basert på tilgjenglig data
df_educ4 <- subset(df_educ3, select = c(country, region, income, iso2c, iso3c, avg_educ)) # Her tar jeg vekk variabelen "year". Jeg gjør dette fordi vi bare har en observasjon på utdanning per land. Vi ønsker å bruke denne verdi for alle år.
df_educ <- df_educ4[!duplicated(df_educ4[c("iso3c")]), ]  %>%  arrange(iso3c) # Ta vekk duplikater for hvert land.
df_gdp_educ0 <- left_join(df_gdp, df_educ, by=c("country", "iso2c", "iso3c", "region", "income"))
df_gdp_educ1 <- subset(df_gdp_educ0, select = c(country, region, income, iso2c, iso3c, year, gdppc, gdppc0, avg_educ)) # Behold nødvendige variabler
# Mange observasjoner representerer aggregerte regioner. Vi ønsker å ta vekk disse. Det finnes helt sikkert en bedre måte å gjøre dette på. Dette er den måten jeg kom på.
df_gdp_educ <- df_gdp_educ1  %>%  filter(iso2c!='1A' & iso2c !='1W' & iso2c != '4E' & iso2c != '7E' & iso2c !='8S'
& iso2c !='B8' & iso2c !='EU' & iso2c !='F1' & iso2c !='OE' & iso2c !='S1' & iso2c !='S2' & iso2c !="S3"
& iso2c !='S4' & iso2c !='T2' & iso2c !='T3' & iso2c !='T4' & iso2c !='T5' & iso2c !='T6' & iso2c !='T7'
& iso2c !='V1' & iso2c !='V2' & iso2c !='V3' & iso2c !='V4' & iso2c !='XC' & iso2c !='XD' & iso2c !='XE'
& iso2c !='XF' & iso2c !='XG' & iso2c !='XH' & iso2c !='XI' & iso2c !='XJ' & iso2c !='XL' & iso2c !='XM'
& iso2c !='XN' & iso2c !='XO' & iso2c !='XP' & iso2c !='XQ' & iso2c !='XT' & iso2c !='XU' & iso2c !='Z4'
& iso2c !='Z7' & iso2c !='ZF'& iso2c !='ZG'  & iso2c !='ZH' & iso2c !='ZI'  & iso2c !='ZJ'  & iso2c !='ZQ'
& iso2c !='ZT'  & iso2c !='Z7')  %>% arrange(iso3c, year)
df_rest0<-WDI(
country = "all",
indicator = c('gsy'="NY.ADJ.ICTR.GN.ZS", 'nsy'="NY.ADJ.NNAT.GN.ZS", 'poptot'="SP.POP.TOTL", 'lfp'="SP.POP.DPND",'gi'="NE.GDI.FTOT.KD.ZG", 'gx'="NE.EXP.GNFS.KD.ZG", 'nry'="NY.ADJ.DRES.GN.ZS", 'n'="SP.POP.GROW" ),
start = 2000,
end = 2019,
extra = TRUE,
cache = NULL,
latest = NULL,
language = "en"
)
df_rest0<-df_rest0 %>%
mutate_all(na_if,"")
df_rest1 <- df_rest0[complete.cases( df_rest0$iso3c, df_rest0$nsy),]  %>%
arrange(iso2c)
# Ta vekk observasjoner som ikke representerer land.
df_rest2 <- df_rest1  %>%  filter(iso2c!='1A' & iso2c !='1W' & iso2c != '4E' & iso2c != '7E' & iso2c !='8S'
& iso2c !='B8' & iso2c !='EU' & iso2c !='F1' & iso2c !='OE' & iso2c !='S1' & iso2c !='S2' & iso2c !="S3"
& iso2c !='S4' & iso2c !='T2' & iso2c !='T3' & iso2c !='T4' & iso2c !='T5' & iso2c !='T6' & iso2c !='T7'
& iso2c !='V1' & iso2c !='V2' & iso2c !='V3' & iso2c !='V4' & iso2c !='XC' & iso2c !='XD' & iso2c !='XE'
& iso2c !='XF' & iso2c !='XG' & iso2c !='XH' & iso2c !='XI' & iso2c !='XJ' & iso2c !='XL' & iso2c !='XM'
& iso2c !='XN' & iso2c !='XO' & iso2c !='XP' & iso2c !='XQ' & iso2c !='XT' & iso2c !='XU' & iso2c !='Z4'
& iso2c !='Z7' & iso2c !='ZF'& iso2c !='ZG'  & iso2c !='ZH' & iso2c !='ZI'  & iso2c !='ZJ'  & iso2c !='ZQ'
& iso2c !='ZT'  & iso2c !='Z7')  %>% arrange(iso3c, year)
df_rest3 <- subset(df_rest2, select = c("country", "region", "income", "iso3c", "iso2c", "year", "poptot", "n","lfp", "nsy", "gsy", "nry", "gi", "gx"))
df_all0 <- left_join(df_gdp_educ, df_rest3, by=c("country", "region", "income", "iso2c", "iso3c", "year"))
df_growth <- subset(df_growth1, select = c("country",  "region", "income", "iso3c", "iso2c","year", "poptot", "gdppc", "gdppcy0", "avg_gdpgrowth", "avg_n", "avg_lfp", "avg_nsy", "avg_nry", "avg_gi", "avg_gx", "avg_educ"))
# Lage datasettet du vil bruke til analysen din
df_growth2019  <- df_growth %>%
arrange(iso3c, year) %>%
group_by(iso3c) %>%
slice(n()) %>% # Behold den SISTE observasjonen for hvert land
ungroup()
head(df_growth2019)
WDIsearch(string = "search item", field = "name", short = TRUE, cache = NULL)
